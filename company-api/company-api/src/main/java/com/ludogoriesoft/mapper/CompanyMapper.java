package com.ludogoriesoft.mapper;

import com.ludogoriesoft.dto.CompanyDto;
import com.ludogoriesoft.entity.Company;
import jakarta.enterprise.context.ApplicationScoped;

/**
 * Handles the mapping between Company entity objects and CompanyDto objects.
 * This decouples the API layer from the data layer.
 */
@ApplicationScoped
public class CompanyMapper {

    /**
     * Converts a CompanyDto to a Company entity.
     * Used when creating a new company from an API request.
     * Note that we don't map id or createdAt, as those are generated by the database.
     */
    public Company toEntity(CompanyDto dto) {
        if (dto == null) {
            return null;
        }
        Company company = new Company();
        company.name = dto.name();
        company.country = dto.country();
        company.symbol = dto.symbol();
        company.website = dto.website();
        company.email = dto.email();
        return company;
    }

    /**
     * Converts a Company entity to a CompanyDto.
     * Used when sending company data back to the client in an API response.
     */
    public CompanyDto toDto(Company entity) {
        if (entity == null) {
            return null;
        }
        return new CompanyDto(
                entity.id,
                entity.name,
                entity.country,
                entity.symbol,
                entity.website,
                entity.email,
                entity.createdAt
        );
    }
}